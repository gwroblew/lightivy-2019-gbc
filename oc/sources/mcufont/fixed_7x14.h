

/* Start of automatically generated font definition for fixed_7x14. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_fixed_7x14_dictionary_data[291] = {
    0x2a, 0x05, 0x80, 0x04, 0x80, 0x01, 0x03, 0x80, 0x01, 0x01, 0x80, 0x06, 0x80, 0x01, 0x0e, 0x03, 
    0x81, 0x01, 0x01, 0x83, 0x86, 0x08, 0x83, 0x02, 0x85, 0x01, 0x01, 0x80, 0x05, 0x07, 0x81, 0x80, 
    0x04, 0x80, 0x01, 0x80, 0x04, 0x80, 0x01, 0x23, 0x10, 0x81, 0x01, 0x0f, 0x83, 0x83, 0x80, 0x06, 
    0x80, 0x02, 0x02, 0x80, 0x01, 0x01, 0x81, 0x82, 0x04, 0x80, 0x06, 0x80, 0x80, 0x01, 0x80, 0x81, 
    0x05, 0x02, 0x81, 0x03, 0x83, 0x15, 0x01, 0x82, 0x81, 0x01, 0x1f, 0x0a, 0x31, 0x01, 0x80, 0x01, 
    0x05, 0x80, 0x05, 0x80, 0x0f, 0x03, 0x80, 0x02, 0x80, 0x02, 0x04, 0x80, 0x04, 0x83, 0x03, 0x04, 
    0x80, 0x06, 0x80, 0x06, 0x80, 0x02, 0x80, 0x05, 0x04, 0x80, 0x02, 0xe6, 0x96, 0x26, 0x2c, 0x97, 
    0x2b, 0x25, 0x25, 0xd5, 0xbd, 0x23, 0xec, 0x3c, 0x1a, 0x1b, 0x23, 0x40, 0x94, 0x3c, 0x41, 0x2e, 
    0x40, 0xb4, 0xb3, 0x84, 0x2a, 0x3f, 0x8d, 0x2e, 0x84, 0x1d, 0x22, 0x90, 0xa8, 0x1b, 0x43, 0x0f, 
    0x96, 0x8e, 0x28, 0xfc, 0x25, 0x1b, 0x25, 0x25, 0x00, 0x93, 0x1d, 0xea, 0x8e, 0x89, 0x19, 0x1c, 
    0xfe, 0x3c, 0x95, 0x00, 0x41, 0x1a, 0x25, 0x40, 0x22, 0xee, 0x96, 0xfc, 0x88, 0xc2, 0x3c, 0x41, 
    0x41, 0x00, 0x19, 0x43, 0x0f, 0x3c, 0x2a, 0x41, 0x25, 0x25, 0x25, 0x2c, 0x30, 0x0f, 0x95, 0x33, 
    0x39, 0x23, 0xfe, 0xbd, 0x23, 0x3e, 0x3a, 0x40, 0x2a, 0xa3, 0x25, 0xc2, 0x37, 0x1b, 0x1a, 0xc3, 
    0x1c, 0xec, 0xc0, 0x00, 0xb4, 0x97, 0xe4, 0xa4, 0x1a, 0x99, 0x99, 0x99, 0x2a, 0x2e, 0x25, 0x25, 
    0x0f, 0x93, 0x40, 0x24, 0x97, 0x00, 0x87, 0x8d, 0x25, 0x22, 0x25, 0x25, 0x39, 0x1a, 0x41, 0x2e, 
    0xc8, 0xa4, 0x84, 0x0f, 0xb4, 0x0f, 0x41, 0x41, 0x94, 0xbc, 0x30, 0x40, 0x23, 0xfc, 0x41, 0x2e, 
    0x40, 0xc2, 0x36, 0x94, 0xab, 0x95, 0x1a, 0x0f, 0x9d, 0x00, 0xa2, 0x40, 0x8d, 0x96, 0x1e, 0x00, 
    0xab, 0x95, 0x1a, 0x25, 0x2d, 0x3a, 0x25, 0x3d, 0x00, 0x95, 0x3a, 0xe5, 0x00, 0x1a, 0x99, 0x2b, 
    0x1a, 0x00, 0x1c, 
};

static const uint16_t mf_rlefont_fixed_7x14_dictionary_offsets[108] = {
    0x0000, 0x0001, 0x0002, 0x0006, 0x0009, 0x000e, 0x000f, 0x0012, 
    0x0014, 0x0015, 0x0018, 0x001a, 0x001d, 0x001f, 0x0027, 0x0028, 
    0x002b, 0x002d, 0x002e, 0x0032, 0x0035, 0x0037, 0x0038, 0x003c, 
    0x003f, 0x0041, 0x0043, 0x0045, 0x0046, 0x0048, 0x004a, 0x004b, 
    0x004c, 0x004d, 0x0050, 0x0053, 0x0055, 0x0058, 0x005a, 0x005c, 
    0x005e, 0x005f, 0x0066, 0x0068, 0x006b, 0x006d, 0x0070, 0x0076, 
    0x0079, 0x007b, 0x007d, 0x0081, 0x0089, 0x008b, 0x008d, 0x008f, 
    0x0091, 0x0092, 0x0095, 0x009b, 0x009d, 0x009e, 0x00a0, 0x00a3, 
    0x00a5, 0x00a7, 0x00a9, 0x00ab, 0x00ae, 0x00b2, 0x00b4, 0x00b6, 
    0x00b8, 0x00bd, 0x00bf, 0x00c2, 0x00c5, 0x00c7, 0x00cd, 0x00d3, 
    0x00d6, 0x00d9, 0x00dc, 0x00de, 0x00e2, 0x00e5, 0x00ec, 0x00ee, 
    0x00f0, 0x00f3, 0x00f5, 0x00fb, 0x00fd, 0x0102, 0x0107, 0x0109, 
    0x010b, 0x010d, 0x010f, 0x0114, 0x0116, 0x0118, 0x011a, 0x011c, 
    0x011e, 0x011f, 0x0121, 0x0123, 
};

static const uint8_t mf_rlefont_fixed_7x14_glyph_data_0[979] = {
    0x07, 0x19, 0xb8, 0x6e, 0x49, 0xac, 0x43, 0x84, 0x25, 0x84, 0x7f, 0xb1, 0x10, 0x07, 0x27, 0x3e, 
    0xa5, 0x8b, 0x93, 0x22, 0xc3, 0x77, 0x77, 0x1e, 0xb4, 0x10, 0x07, 0x39, 0x69, 0x69, 0x69, 0x69, 
    0x69, 0xd9, 0x07, 0x49, 0x44, 0x77, 0xa8, 0x78, 0x84, 0xbc, 0x87, 0x6a, 0x10, 0x07, 0x24, 0x1a, 
    0x3a, 0x92, 0x82, 0xb2, 0x82, 0xfc, 0xbc, 0x41, 0x10, 0x07, 0x84, 0xa0, 0x82, 0x3a, 0xf8, 0x30, 
    0x24, 0x1a, 0x44, 0xa0, 0x78, 0xd6, 0x10, 0x07, 0x49, 0x57, 0x3f, 0x37, 0x77, 0x88, 0xbc, 0x2e, 
    0x10, 0x07, 0x68, 0x44, 0xdc, 0x10, 0x07, 0x18, 0x3c, 0x5b, 0x43, 0x5b, 0x10, 0x07, 0x19, 0x5d, 
    0xb5, 0x7d, 0x61, 0x44, 0x6f, 0x2d, 0x10, 0x07, 0x84, 0x7d, 0x56, 0x98, 0x94, 0x37, 0xc2, 0x6f, 
    0x10, 0x07, 0x5c, 0x29, 0x10, 0x07, 0x38, 0x0f, 0x8b, 0x4a, 0x07, 0x38, 0x32, 0x4a, 0x07, 0x5c, 
    0x32, 0x10, 0x07, 0x5c, 0x20, 0x4a, 0x07, 0x20, 0x10, 0x07, 0x33, 0x20, 0x10, 0x07, 0x38, 0x20, 
    0x10, 0x07, 0x33, 0x38, 0x20, 0x10, 0x07, 0x18, 0x38, 0x20, 0x07, 0x5c, 0x32, 0x4a, 0x07, 0x5c, 
    0x0f, 0x8b, 0x4a, 0x07, 0x5c, 0x20, 0x10, 0x07, 0x38, 0x20, 0x4a, 0x07, 0x5c, 0x5c, 0x07, 0x36, 
    0xca, 0x8a, 0x87, 0x1e, 0x84, 0x30, 0x59, 0x10, 0x07, 0x33, 0x24, 0x24, 0x24, 0x1e, 0x90, 0x37, 
    0xc3, 0x10, 0x07, 0x36, 0x3f, 0x97, 0x56, 0x56, 0x44, 0x10, 0x07, 0xe4, 0x33, 0x2a, 0xc3, 0x2e, 
    0x59, 0x82, 0x10, 0x07, 0x33, 0x1e, 0x78, 0x1c, 0x3f, 0x94, 0x3a, 0x93, 0xa8, 0x10, 0x07, 0x18, 
    0xec, 0x10, 0x07, 0x00, 0x10, 0x07, 0x1d, 0x5c, 0x84, 0x2e, 0x10, 0x07, 0xfc, 0x49, 0x7c, 0xd8, 
    0x10, 0x07, 0x1d, 0x81, 0xc5, 0x89, 0xa3, 0x98, 0xac, 0xbc, 0x61, 0x7c, 0x10, 0x07, 0x40, 0x1d, 
    0x71, 0x97, 0x5a, 0xad, 0xa4, 0x87, 0x5a, 0xc9, 0xa9, 0x7b, 0x10, 0x07, 0x1d, 0x53, 0xe9, 0x9d, 
    0xa0, 0x7e, 0xbc, 0x1e, 0x5a, 0xdd, 0x10, 0x07, 0x27, 0x1b, 0x56, 0xc6, 0x8a, 0x53, 0x99, 0xa8, 
    0x90, 0xaa, 0x10, 0x07, 0x37, 0x6a, 0x10, 0x07, 0x40, 0x5d, 0x4e, 0x73, 0x5f, 0x19, 0x2a, 0xa4, 
    0x49, 0x07, 0x84, 0x70, 0x86, 0x88, 0x6f, 0x40, 0x82, 0x64, 0x07, 0x36, 0x1a, 0x89, 0x7b, 0xeb, 
    0x98, 0xa5, 0x10, 0x07, 0x36, 0x2a, 0x5b, 0x41, 0x10, 0x07, 0x33, 0x38, 0x90, 0x2e, 0xa4, 0x10, 
    0x07, 0x38, 0xc2, 0x10, 0x07, 0x36, 0x18, 0x42, 0x7b, 0x10, 0x07, 0x84, 0x55, 0x2e, 0x57, 0x1b, 
    0x7e, 0x1b, 0x2e, 0x10, 0x07, 0x27, 0x78, 0x58, 0x58, 0x79, 0x10, 0x07, 0x00, 0x1d, 0x88, 0x90, 
    0x98, 0xa4, 0x74, 0x10, 0x07, 0x51, 0x7e, 0x4e, 0x4e, 0x59, 0x10, 0x07, 0x4c, 0xa4, 0x7e, 0xa0, 
    0x55, 0x25, 0x1f, 0x10, 0x07, 0x1d, 0x3e, 0xa4, 0x7c, 0xd6, 0x78, 0x5e, 0x22, 0x2e, 0x10, 0x07, 
    0x4c, 0x3d, 0x2e, 0x93, 0xa5, 0x55, 0x25, 0x1f, 0x10, 0x07, 0x1d, 0xe0, 0x4e, 0x2e, 0x7a, 0x1f, 
    0x10, 0x07, 0x4c, 0x7e, 0x4e, 0x64, 0x39, 0x2e, 0x10, 0x07, 0x51, 0x79, 0x78, 0x58, 0x1f, 0x10, 
    0x07, 0x51, 0xe5, 0x8e, 0x63, 0x6e, 0xd5, 0xbc, 0x10, 0x07, 0x36, 0x42, 0x7b, 0x37, 0x3a, 0x7b, 
    0x10, 0x07, 0x26, 0x31, 0xa4, 0x3b, 0xb4, 0x55, 0x3e, 0x10, 0x07, 0x33, 0x7e, 0x2b, 0x64, 0x70, 
    0xe6, 0xa4, 0x10, 0x07, 0x33, 0x4c, 0x4c, 0x10, 0x07, 0x33, 0x23, 0x70, 0x86, 0x4e, 0x4e, 0xec, 
    0x10, 0x07, 0x51, 0x64, 0x1c, 0x84, 0x55, 0x10, 0x07, 0x1d, 0xf8, 0xa7, 0xac, 0xa0, 0xa9, 0x8e, 
    0x99, 0x5a, 0xbd, 0x88, 0x3f, 0x10, 0x07, 0x27, 0x78, 0x58, 0x22, 0x58, 0xa5, 0x10, 0x07, 0x37, 
    0x3f, 0x47, 0xd5, 0xc0, 0x47, 0xa5, 0xa6, 0xc0, 0x10, 0x07, 0x51, 0x5f, 0x81, 0x1f, 0x10, 0x07, 
    0x37, 0x3f, 0x47, 0x25, 0x58, 0xd5, 0xc0, 0x10, 0x07, 0x4c, 0x6a, 0x8b, 0x6a, 0x84, 0xc3, 0x10, 
    0x07, 0x4c, 0x6a, 0x8b, 0x5f, 0x10, 0x07, 0x51, 0x3d, 0x2e, 0xa0, 0x7c, 0x63, 0x10, 0x07, 0x1d, 
    0x1a, 0x58, 0x22, 0x25, 0x58, 0x10, 0x07, 0x1d, 0xc2, 0x43, 0x2e, 0x74, 0x10, 0x07, 0x1d, 0xbc, 
    0x57, 0x41, 0x95, 0xa6, 0xbc, 0x10, 0x07, 0x1d, 0xa5, 0x44, 0xa6, 0x86, 0x87, 0x8e, 0xa8, 0x47, 
    0xa5, 0x10, 0x07, 0x1d, 0x5f, 0x6f, 0xe3, 0x10, 0x07, 0x1d, 0x1a, 0x76, 0xb7, 0x9e, 0xb9, 0x6e, 
    0x58, 0xa5, 0x10, 0x07, 0x1d, 0x25, 0xa7, 0x8a, 0x99, 0x8e, 0x99, 0xb0, 0x1e, 0x25, 0x10, 0x07, 
    0x51, 0x60, 0x10, 0x07, 0x37, 0x3e, 0x93, 0x6b, 0x6a, 0x10, 0x07, 0x51, 0x7c, 0xb8, 0xad, 0x98, 
    0xb5, 0x77, 0xa4, 0x49, 0x07, 0x37, 0x3e, 0x93, 0x6b, 0xed, 0x47, 0xa5, 0x10, 0x07, 0x51, 0x0f, 
    0x24, 0x24, 0x49, 0x25, 0x1f, 0x10, 0x07, 0x1d, 0xe3, 0x61, 0x57, 0x6f, 0x10, 0x07, 0x1d, 0x58, 
    0x60, 0x10, 0x07, 0x1d, 0x1a, 0x58, 0x96, 0xa8, 0x78, 0x90, 0x1e, 0xb4, 0x10, 0x07, 0x1d, 0x56, 
    0x56, 0x56, 0x5a, 0xe9, 0xae, 0xac, 0x10, 0x07, 0x1d, 0x25, 0x39, 0xa6, 0x88, 0x8a, 0x4d, 0x78, 
    0x25, 0x10, 0x07, 0x1d, 0x7d, 0x56, 0x81, 0xfd, 0x6f, 0x10, 0x07, 0x4c, 0x7e, 0x2b, 0x7e, 0x82, 
    0x2e, 0xe3, 0x10, 0x07, 0x19, 0x3f, 0x4a, 0x3c, 0x6f, 0xeb, 0x07, 0x00, 0x55, 0x55, 0x55, 0x3a, 
    0x82, 0x55, 0x55, 0x07, 0x21, 0x6f, 0x40, 0x4a, 0x93, 0x07, 0x68, 0xe6, 0xa5, 0x10, 0x07, 0x26, 
    0x18, 0x4c, 0x07, 0x5d, 0x3a, 0xf8, 0x10, 0x07, 0x45, 0x65, 0x10, 0x07, 0x1d, 0x6a, 0x7a, 0xa7, 
    0xbe, 0x10, 0x07, 0x45, 0x1b, 0x6a, 0x3e, 0xc0, 0x10, 0x07, 0x1d, 0x57, 0x9b, 0xb5, 0x7f, 0x7c, 
    0x63, 0x10, 0x07, 0x45, 0x66, 0x10, 0x07, 0x37, 0x24, 0x43, 0x5e, 0x5b, 0x6f, 0x10, 0x07, 0x26, 
    0xb2, 0x56, 0xa6, 0xbc, 0x73, 0xa1, 0x7f, 0x1f, 0x10, 0x07, 0x1d, 0x6a, 0x7a, 0x25, 0x10, 0x07, 
    0x37, 0x49, 0x3a, 0x24, 0x74, 0x10, 0x07, 0x37, 0x5d, 0x73, 0x24, 0x84, 0x5f, 0x5e, 0x5e, 0x92, 
    0x07, 0x1d, 0x6a, 0x78, 0xe5, 0x89, 0x92, 0xa8, 0x47, 0x10, 0x07, 0x1d, 0xf8, 0x6a, 0x74, 0x10, 
    0x07, 0x36, 0xa4, 0x89, 0x99, 0x5a, 0xa9, 0x8e, 0x99, 0xa6, 0x10, 0x07, 0x75, 0x58, 0xa5, 0x10, 
    0x07, 0x45, 0x52, 0x07, 0x75, 0x25, 0xa7, 0xbe, 0x82, 0x10, 0x07, 0x00, 0x26, 0x9b, 0xb5, 0x7f, 
    0x7c, 0x63, 0x1c, 0x07, 0x75, 0x6a, 0x10, 0x07, 0x45, 0x48, 0x31, 0x49, 0x7f, 0x1f, 0x10, 0x07, 
    0x1d, 0xf8, 0x55, 0xbc, 0x87, 0x5f, 0x71, 0x10, 0x07, 0x36, 0x43, 0x46, 0x10, 0x07, 0x26, 0x7d, 
    0x56, 0x81, 0xfd, 0x2e, 0x10, 0x07, 0x26, 0x56, 0x5a, 0xc9, 0x99, 0xae, 0xac, 0x10, 0x07, 0x26, 
    0x25, 0x79, 0x78, 0x25, 0x10, 0x07, 0x26, 0x25, 0x7c, 0x63, 0x6e, 0x1f, 0x10, 0x07, 0x33, 0x4c, 
    0x43, 0x4e, 0x64, 0xc3, 0x10, 0x07, 0xe4, 0x24, 0x2e, 0x55, 0x7e, 0x6f, 0x24, 0x10, 0x07, 0x00, 
    0x84, 0x4a, 0x5c, 0x07, 0x00, 0x84, 0x8a, 0x6f, 0x49, 0x6f, 0xb4, 0x10, 0x07, 0x40, 0x3a, 0x4f, 
    0xad, 0xa4, 0x10, 
};

static const uint16_t mf_rlefont_fixed_7x14_glyph_offsets_0[127] = {
    0x0000, 0x000d, 0x001a, 0x0022, 0x002d, 0x0039, 0x0047, 0x0051, 
    0x0056, 0x005d, 0x0067, 0x0071, 0x0075, 0x007a, 0x007e, 0x0082, 
    0x0086, 0x0089, 0x008d, 0x0091, 0x0096, 0x009a, 0x009e, 0x00a3, 
    0x00a7, 0x00ab, 0x00ae, 0x00b8, 0x00c2, 0x00ca, 0x00d3, 0x00de, 
    0x00e2, 0x00e5, 0x00eb, 0x00f1, 0x00fd, 0x010b, 0x0117, 0x0123, 
    0x0127, 0x0131, 0x013a, 0x0143, 0x0149, 0x0150, 0x0154, 0x015a, 
    0x0164, 0x016b, 0x0174, 0x017b, 0x0184, 0x018f, 0x0199, 0x01a1, 
    0x01a9, 0x01b0, 0x01b9, 0x01c1, 0x01ca, 0x01d3, 0x01d8, 0x01e1, 
    0x01e8, 0x01f6, 0x01fe, 0x0209, 0x020f, 0x0218, 0x0220, 0x0226, 
    0x022e, 0x0236, 0x023d, 0x0246, 0x0252, 0x0258, 0x0263, 0x026f, 
    0x0273, 0x027a, 0x0284, 0x028d, 0x0296, 0x029d, 0x02a2, 0x02ad, 
    0x02b7, 0x02c2, 0x02ca, 0x02d3, 0x02da, 0x02e3, 0x02e9, 0x02ee, 
    0x02f2, 0x02f7, 0x02fb, 0x0302, 0x0309, 0x0312, 0x0316, 0x031e, 
    0x0329, 0x032f, 0x0336, 0x0340, 0x034a, 0x0350, 0x035b, 0x0360, 
    0x0363, 0x036a, 0x0373, 0x0377, 0x037f, 0x0388, 0x038d, 0x0395, 
    0x039e, 0x03a5, 0x03ad, 0x03b5, 0x03be, 0x03c3, 0x03cc, 
};

static const uint8_t mf_rlefont_fixed_7x14_glyph_data_1[742] = {
    0x07, 0x00, 0x10, 0x07, 0x40, 0x37, 0x2e, 0x37, 0x5c, 0x10, 0x07, 0xe4, 0x33, 0x3a, 0x93, 0xa9, 
    0x6e, 0x7c, 0xbd, 0xa5, 0x10, 0x07, 0x33, 0x1e, 0x78, 0x1c, 0x3f, 0x94, 0x3a, 0x93, 0xa8, 0x10, 
    0x07, 0x33, 0xf8, 0xa7, 0x48, 0x7b, 0x7b, 0xa6, 0xbc, 0x10, 0x07, 0x1d, 0x7d, 0x81, 0xfd, 0x5b, 
    0x5b, 0x41, 0x10, 0x07, 0x79, 0x6c, 0x40, 0x89, 0xb6, 0x24, 0x49, 0x25, 0x1f, 0x10, 0x07, 0x40, 
    0x67, 0x48, 0x4d, 0x2b, 0x78, 0x71, 0x49, 0x7f, 0x1f, 0x10, 0x07, 0x1d, 0x79, 0x6c, 0x48, 0x31, 
    0x49, 0x7f, 0x1f, 0x10, 0x07, 0x40, 0x67, 0xac, 0x9a, 0x76, 0x61, 0x61, 0xa7, 0xaa, 0xb9, 0x6e, 
    0x1f, 0x10, 0x07, 0xfc, 0x84, 0x92, 0x7d, 0x77, 0x44, 0x8a, 0x8f, 0x84, 0xc2, 0x10, 0x07, 0x26, 
    0xac, 0xac, 0xac, 0xac, 0xa4, 0x86, 0x8e, 0xac, 0x10, 0x07, 0x18, 0x28, 0x6a, 0x10, 0x07, 0x26, 
    0x28, 0x10, 0x07, 0x21, 0xc5, 0xc1, 0x9e, 0xba, 0xb0, 0x9b, 0x76, 0x76, 0x76, 0xa5, 0xc0, 0x10, 
    0x07, 0x1d, 0xc2, 0x10, 0x07, 0x68, 0x44, 0xdc, 0x10, 0x07, 0x18, 0x3c, 0x5b, 0x43, 0x5b, 0x10, 
    0x07, 0x68, 0xc6, 0x4e, 0x4e, 0x3f, 0x10, 0x07, 0x68, 0x1c, 0x1e, 0x84, 0x5e, 0x71, 0x10, 0x07, 
    0x79, 0x84, 0xbc, 0x7b, 0x2a, 0x4e, 0x64, 0xc2, 0x3b, 0x07, 0x18, 0x56, 0x44, 0xc8, 0x9f, 0x5a, 
    0x3a, 0x07, 0x84, 0x6c, 0xa9, 0x8e, 0x99, 0xae, 0x1e, 0x58, 0x7c, 0xa0, 0x07, 0x18, 0xec, 0x10, 
    0x07, 0x1d, 0x79, 0x84, 0x59, 0x43, 0x4e, 0x64, 0xc3, 0x10, 0x07, 0x19, 0xa4, 0xa4, 0x5f, 0xbc, 
    0x10, 0x07, 0x27, 0x78, 0x79, 0x84, 0x3f, 0x10, 0x07, 0x26, 0x2f, 0xa4, 0x86, 0x8e, 0xac, 0xac, 
    0xac, 0xac, 0x10, 0x07, 0x28, 0xc9, 0x5e, 0x5e, 0x5e, 0x9b, 0x56, 0x44, 0x32, 0x3b, 0x07, 0x45, 
    0x5a, 0xc9, 0x9b, 0x44, 0x32, 0x3b, 0x07, 0x81, 0xe5, 0x84, 0x56, 0x81, 0xfd, 0x6f, 0x10, 0x07, 
    0xfc, 0x33, 0x2a, 0x84, 0x57, 0x64, 0x25, 0x1f, 0x10, 0x07, 0x70, 0x19, 0x6d, 0x10, 0x07, 0x4e, 
    0x37, 0x6d, 0x10, 0x07, 0x4d, 0x37, 0x6d, 0x10, 0x07, 0xaa, 0xb6, 0x37, 0x6d, 0x10, 0x07, 0x84, 
    0xa8, 0x37, 0x6d, 0x10, 0x07, 0x68, 0xc6, 0x6d, 0x10, 0x07, 0x84, 0x6c, 0x95, 0x44, 0xe0, 0x9b, 
    0x56, 0x56, 0x34, 0x10, 0x07, 0x51, 0x5f, 0x81, 0x1f, 0x7e, 0x10, 0x07, 0x70, 0x4b, 0xc3, 0x10, 
    0x07, 0x4e, 0x19, 0x4b, 0xc3, 0x10, 0x07, 0xd0, 0x48, 0x4b, 0xc3, 0x10, 0x07, 0x19, 0x48, 0x4b, 
    0xc3, 0x10, 0x07, 0x70, 0x00, 0x3f, 0x72, 0x10, 0x07, 0x64, 0xfc, 0x3f, 0x72, 0x10, 0x07, 0x3c, 
    0xac, 0x84, 0x3f, 0x72, 0x10, 0x07, 0x84, 0xac, 0x84, 0x3f, 0x72, 0x10, 0x07, 0x28, 0x47, 0xfd, 
    0xbc, 0x97, 0x58, 0xd5, 0xc0, 0x10, 0x07, 0x53, 0xc7, 0x84, 0x61, 0x61, 0xa9, 0x8e, 0xa9, 0x8e, 
    0x99, 0xae, 0x1e, 0xb5, 0x10, 0x07, 0x70, 0x67, 0x1b, 0x60, 0x10, 0x07, 0x4e, 0x6c, 0x1b, 0x60, 
    0x10, 0x07, 0x4d, 0x6c, 0x1b, 0x60, 0x10, 0x07, 0x53, 0xe7, 0x21, 0x1a, 0x60, 0x10, 0x07, 0x19, 
    0x78, 0x21, 0x1a, 0x60, 0x10, 0x07, 0x36, 0x3e, 0xa4, 0xa6, 0xac, 0xa4, 0xa4, 0xa6, 0xac, 0xa4, 
    0x10, 0x07, 0xa4, 0x84, 0xbd, 0x8d, 0x9a, 0x5a, 0xa9, 0x5a, 0xe9, 0x5a, 0xa7, 0xc0, 0x82, 0x10, 
    0x07, 0x70, 0xe4, 0x25, 0x60, 0x10, 0x07, 0x4e, 0x5d, 0x81, 0x60, 0x10, 0x07, 0x4d, 0x5d, 0x81, 
    0x60, 0x10, 0x07, 0x19, 0x48, 0xe4, 0x25, 0x60, 0x10, 0x07, 0x64, 0x19, 0x56, 0x81, 0xfd, 0x6f, 
    0x10, 0x07, 0x19, 0x5d, 0x2e, 0x93, 0x6b, 0x2a, 0x10, 0x07, 0x27, 0x1b, 0x7d, 0x44, 0xa0, 0x78, 
    0x56, 0xa6, 0xc2, 0x10, 0x07, 0x1d, 0x70, 0x67, 0x65, 0x10, 0x07, 0x1d, 0x94, 0x94, 0x6c, 0x65, 
    0x10, 0x07, 0x1d, 0x4d, 0x6c, 0x65, 0x10, 0x07, 0x1d, 0xaa, 0xb6, 0x6c, 0x65, 0x10, 0x07, 0x62, 
    0x67, 0x65, 0x10, 0x07, 0x68, 0x39, 0x1e, 0x6c, 0x65, 0x10, 0x07, 0x33, 0x28, 0x4f, 0xb6, 0x98, 
    0xa3, 0xa6, 0xa8, 0xc2, 0x10, 0x07, 0x45, 0x1b, 0x6a, 0x43, 0x93, 0x4e, 0x10, 0x07, 0x1d, 0x70, 
    0x67, 0x66, 0x10, 0x07, 0x1d, 0x4e, 0x6c, 0x66, 0x10, 0x07, 0x1d, 0x4d, 0x6c, 0x66, 0x10, 0x07, 
    0x62, 0x67, 0x66, 0x10, 0x07, 0x1d, 0xc8, 0x3a, 0x24, 0x74, 0x10, 0x07, 0x1d, 0x64, 0x24, 0x74, 
    0x10, 0x07, 0x27, 0x1b, 0x86, 0x24, 0x74, 0x10, 0x07, 0x33, 0xf8, 0x86, 0x24, 0x74, 0x10, 0x07, 
    0x84, 0xac, 0x3a, 0x2f, 0x49, 0x77, 0x56, 0x56, 0xa6, 0xbc, 0x10, 0x07, 0x1d, 0x53, 0x87, 0xa4, 
    0x7a, 0x25, 0x10, 0x07, 0x1d, 0x70, 0x67, 0x52, 0x07, 0x1d, 0x4e, 0x6c, 0x52, 0x07, 0x1d, 0x4d, 
    0x6c, 0x52, 0x07, 0x1d, 0xaa, 0xb6, 0x6c, 0x52, 0x07, 0x62, 0x67, 0x52, 0x07, 0x26, 0x27, 0x84, 
    0xbc, 0x8b, 0x24, 0x10, 0x07, 0x33, 0x3a, 0xb5, 0x97, 0x5a, 0x99, 0x5a, 0xa7, 0xc0, 0x82, 0x10, 
    0x07, 0x1d, 0x70, 0x43, 0x46, 0x10, 0x07, 0x1d, 0x4e, 0x5d, 0x46, 0x10, 0x07, 0x1d, 0x4d, 0x5d, 
    0x46, 0x10, 0x07, 0x62, 0x43, 0x46, 0x10, 0x07, 0x1d, 0x4e, 0x5d, 0x81, 0x44, 0x7f, 0xa5, 0x30, 
    0x5e, 0x71, 0x10, 0x07, 0x1d, 0x6a, 0x7a, 0xa7, 0xbe, 0x82, 0x10, 0x07, 0x62, 0xe4, 0x25, 0x44, 
    0x7f, 0xa5, 0x30, 0x5e, 0x71, 0x10, 
};

static const uint16_t mf_rlefont_fixed_7x14_glyph_offsets_1[96] = {
    0x0000, 0x0003, 0x000a, 0x0015, 0x0020, 0x002a, 0x0033, 0x003e, 
    0x004a, 0x0054, 0x0062, 0x006e, 0x0079, 0x007e, 0x0082, 0x0090, 
    0x0094, 0x0099, 0x00a0, 0x00a7, 0x00af, 0x00b9, 0x00c1, 0x00cc, 
    0x00d0, 0x00da, 0x00e1, 0x00e8, 0x00f3, 0x00fe, 0x0106, 0x010f, 
    0x0119, 0x011e, 0x0123, 0x0128, 0x012e, 0x0134, 0x0139, 0x0144, 
    0x014b, 0x0150, 0x0156, 0x015c, 0x0162, 0x0168, 0x016e, 0x0175, 
    0x017c, 0x0186, 0x0195, 0x019b, 0x01a1, 0x01a7, 0x01ae, 0x01b5, 
    0x01c1, 0x01d0, 0x01d6, 0x01dc, 0x01e2, 0x01e9, 0x01f1, 0x01f9, 
    0x0204, 0x020a, 0x0211, 0x0217, 0x021e, 0x0223, 0x022a, 0x0235, 
    0x023d, 0x0243, 0x0249, 0x024f, 0x0254, 0x025b, 0x0261, 0x0268, 
    0x026f, 0x027b, 0x0283, 0x0288, 0x028d, 0x0292, 0x0298, 0x029c, 
    0x02a4, 0x02b0, 0x02b6, 0x02bc, 0x02c2, 0x02c7, 0x02d3, 0x02db, 
};

static const struct mf_rlefont_char_range_s mf_rlefont_fixed_7x14_char_ranges[] = {
    {0, 127, mf_rlefont_fixed_7x14_glyph_offsets_0, mf_rlefont_fixed_7x14_glyph_data_0},
    {160, 96, mf_rlefont_fixed_7x14_glyph_offsets_1, mf_rlefont_fixed_7x14_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_fixed_7x14 = {
    {
    "-Misc-Fixed-Medium-R-Normal--14-130-75-75-C-70-ISO8859-15",
    "fixed_7x14",
    7, /* width */
    14, /* height */
    7, /* min x advance */
    7, /* max x advance */
    0, /* baseline x */
    12, /* baseline y */
    14, /* line height */
    3, /* flags */
    0, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_fixed_7x14_dictionary_data,
    mf_rlefont_fixed_7x14_dictionary_offsets,
    44, /* rle dict count */
    107, /* total dict count */
    2, /* char range count */
    mf_rlefont_fixed_7x14_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_fixed_7x14_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_fixed_7x14
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_fixed_7x14_listentry)
#endif


/* End of automatically generated font definition for fixed_7x14. */

